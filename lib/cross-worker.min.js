"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),CrossPort=function(){function CrossPort(nativeWorker,useShared){_classCallCheck(this,CrossPort),this._portNativeWorker=nativeWorker,this._useShared=useShared}return _createClass(CrossPort,[{key:"start",value:function(){this._useShared&&this._portNativeWorker.port.start()}},{key:"postMessage",value:function(){var nativePort=this._portNativeWorker.port;this._useShared?nativePort.postMessage.apply(nativePort,arguments):this._portNativeWorker.postMessage.apply(this._portNativeWorker,arguments)}},{key:"close",value:function(){this._useShared?this._portNativeWorker.port.close():this._portNativeWorker.terminate()}},{key:"onmessage",set:function(cb){this._useShared?this._portNativeWorker.port.onmessage=cb:this._portNativeWorker.onmessage=cb}}]),CrossPort}(),_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),CrossWorker=function(){function CrossWorker(jsFile,useDedicatedWorker){_classCallCheck(this,CrossWorker),this._useShared=!(useDedicatedWorker||!window.SharedWorker);var nativeCtor=this._useShared?window.SharedWorker:window.Worker;this._nativeWorker=new nativeCtor(jsFile),this._cdPort=new CrossPort(this._nativeWorker,this._useShared)}return _createClass(CrossWorker,[{key:"port",get:function(){return this._cdPort}}]),CrossWorker}();